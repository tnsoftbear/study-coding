services:
  cst-app:
    build: 
      context: ../..
      dockerfile: ./deploy/docker/app/Dockerfile
      labels:
        - "app-identity=delivery-magic"
        - "app-service=customer-app"
    ports:
      - 8080:8080
    env_file:
      - ./env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ping"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 5s
    depends_on:
      - cst-redis-storage
    networks:
      - cst-public-network
      - cst-redis-network

  cst-redis-storage:
    image: redis
    # ports:
    #   - 6379:6379
    labels:
      - "app-identity=delivery-magic"
      - "app-service=cst-redis-storage"
    volumes:
      - cst-redis-data:/data
      - ./redis-storage/redis.conf:/usr/local/etc/redis/redis.conf
    entrypoint: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - cst-redis-network

  cst-redis-populator:
    image: redis
    depends_on:
      - cst-redis-storage
    env_file:
      - ./env
    volumes:
      - ./redis-populator:/redis-populator
    entrypoint: ["/redis-populator/populate.sh", "/redis-populator/data.txt"]
    labels:
      - "app-identity=delivery-magic"
      - "app-service=cst-redis-populator"
    networks:
      - cst-redis-network

  cst-redis-backup:
    image: bash
    entrypoint: ["/snapshot-backup.sh"]
    depends_on:
      - cst-redis-storage
    environment:
      - BACKUP_PERIOD=10
    volumes:
      - ./redis-backup/snapshot-backup.sh:/snapshot-backup.sh
      - cst-redis-data:/data:ro
      - cst-backup:/backup

volumes:
  cst-redis-data:
    labels:
      - "app-identity=delivery-magic"
      - "app-volume=cst-redis-data"
  cst-backup:
    labels:
      - "app-identity=delivery-magic"
      - "app-volume=cst-backup"

networks:
  cst-public-network:
    labels:
      - "app-identity=delivery-magic"
      - "app-network=cst-public-network"
  cst-redis-network:
    labels:
      - "app-identity=delivery-magic"
      - "app-network=cst-redis-network"
